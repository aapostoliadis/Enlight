<?php
/**
 * Test class for Enlight_Extensions_Log_Bootstrap.
 * Generated by PHPUnit on 2012-01-20 at 15:48:07.
 */
class Enlight_Tests_Extensions_Log_BootstrapTest extends Enlight_Components_Test_Plugin_TestCase
{
    /**
     * @var Enlight_Extensions_Log_Bootstrap
     */
    protected $log;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp()
    {
        $this->log = $this->getMock('Enlight_Extensions_Log_Bootstrap', null, array('Json'));
        $namespace = new Enlight_Plugin_Namespace_Loader('Extensions');
        $namespace->registerPlugin($this->log);
        parent::setUp();
    }

    /**
     * @covers Enlight_Extensions_Log_Bootstrap::install
     */
    public function testInstall()
    {
        $log = $this->getMock(
            'Enlight_Extensions_Log_Bootstrap', array('subscribeEvent'),
            array(), '', false
        );
        $log->expects($this->any())
            ->method('subscribeEvent')
            ->with($this->isType('string'), $this->isType('string'), $this->anything());
        $this->assertTrue($log->install());
    }

    /**
     * @covers Enlight_Extensions_Log_Bootstrap::onInitResourceLog
     */
    public function testOnInitResourceLog()
    {
        $args = $this->createEventArgs();
        $this->assertInstanceOf('Zend_Log', $this->log->onInitResourceLog($args));
    }

    /**
     * @covers Enlight_Extensions_Log_Bootstrap::onRouteStartup
     */
    public function testOnRouteStartup()
    {
        $request = $this->Request();
        $request->setHeader('User-Agent', 'Enlight');
        $front = $this->Front()->setRequest($request);
        $args = $this->createEventArgs(array('subject' => $front));
        $this->assertEquals(null, $this->log->onRouteStartup($args));
    }

    /**
     * @covers Enlight_Extensions_Log_Bootstrap::onDispatchLoopShutdown
     */
    public function testOnDispatchLoopShutdown()
    {
        $channel = $this->log->FirebugChannel();
        $args = $this->createEventArgs();
        $this->assertEquals(null, $this->log->onDispatchLoopShutdown($args));
    }
}